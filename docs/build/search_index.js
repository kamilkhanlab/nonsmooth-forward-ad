var documenterSearchIndex = {"docs":
[{"location":"methodOutline.html#Method-Outline","page":"Method Outline","title":"Method Outline","text":"","category":"section"},{"location":"methodOutline.html","page":"Method Outline","title":"Method Outline","text":"Suppose we have a composite, non-smooth function f of n variables with derivative Df. ","category":"page"},{"location":"methodOutline.html","page":"Method Outline","title":"Method Outline","text":"The following implementation by Khan and Barton (2015) provides vector-forward AD evaluation methods for a generalized derivative Df(x)M of f on input domain vector x using a chosen matrix M through operator overloading.","category":"page"},{"location":"methodOutline.html","page":"Method Outline","title":"Method Outline","text":"The overloading defines additional calculus for elemental non-smooth functions, like abs, min, or max, based on “LD-derivative” constructions. This requires knowledge of when said elemental functions are at “kinks” – non-differentiable points. ","category":"page"},{"location":"methodOutline.html","page":"Method Outline","title":"Method Outline","text":"The resulting output derivative-matrix product is a valid generalized derivative with the same properties of an element of a Clarke’s generalized Jacobian. ","category":"page"},{"location":"methodOutline.html","page":"Method Outline","title":"Method Outline","text":"An additional “compass difference” evaluation procedure was added for bivariate scalar-valued functions. Khan and Yuan (2020) show generalized derivatives can be constructed using four directional derivative evaluations in a “compass difference” without the usual LD-derivative calculus. ","category":"page"},{"location":"functions.html#Exported-Structs","page":"Exported Functions","title":"Exported Structs","text":"","category":"section"},{"location":"functions.html#Exported-Functions","page":"Exported Functions","title":"Exported Functions","text":"","category":"section"},{"location":"index.html#**NonSmoothFwdAD-Documentation**","page":"Introduction","title":"NonSmoothFwdAD Documentation","text":"","category":"section"},{"location":"index.html#Installation-and-Usage","page":"Introduction","title":"Installation and Usage","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"NonSmoothFwdAD is currently not a registered Julia package. To download from the Julia REPL, type ] to access Pkg REPL mode and then run the following command:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"add https://github.com/kamilkhanlab/nonsmooth-forward-ad ","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Then, to use the package:","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using ConvexSampling","category":"page"},{"location":"index.html#Example","page":"Introduction","title":"Example","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The usage of SamplingUnderestimators is demonstrated by scripts test.jl and convexTest.jl. ","category":"page"},{"location":"index.html#Authors","page":"Introduction","title":"Authors","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Maha Chaudhry, Department of Chemical Engineering, McMaster University\nKamil Khan, Department of Chemical Engineering, McMaster University","category":"page"},{"location":"index.html#References","page":"Introduction","title":"References","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"\n","category":"page"}]
}
